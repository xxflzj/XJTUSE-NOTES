<?xml version="1.0" encoding="UTF-8"?>
<opml version="2.0">
  <head>
    <title></title>
    <dateModified></dateModified>
    <ownerName></ownerName>
  </head>
  <body>
<outline text="第一章 引论" _note="作业：10% 单元测试：15% 考勤：5% 期末：70%">
  <outline text="一、编译程序概念">
    <outline text="1、编译程序历史" _note="编译程序时系统软件忠资格最老的成员之一，已经形成一套较为**系统化**的编译理论与方法&#10;&#10;&gt; 操作系统、数据库管理系统和编译程序">
    </outline>
    <outline text="2、与其他课程的关系" _note="![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20220117084000715.png)">
    </outline>
    <outline text="3、编译理论的应用" _note="![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20220117085807391.png)">
    </outline>
    <outline text="4、翻译程序" _note="翻译程序（translator）是一种程序，其输入时某种语言的一系列语句，而其输出则是另一种语言的一系列语句&#10;&#10;![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20220117082818147.png)&#10;&#10;语言没有高低之分">
    </outline>
    <outline text="5、编译程序" _note="**编译程序（Compiler）**是一种程序。它把用高级语言写的源程序作为数据接收，  &#10;经过翻译转换，产生面向机器的代码作为输出。&#10;&#10;这当中代码还可能要由汇编程序或装配程序作进一步加工，得出目标程序，交给计算机执行&#10;&#10;🏷 **语言有高低之分**&#10;&#10;![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20220117083333118.png)">
    </outline>
  </outline>
  <outline text="二、编译过程概述">
    <outline text="1、编译过程的组成" _note="![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20220117084608051.png)">
    </outline>
    <outline text="2、词法分析" _note="**任务**：输入源程序;扫描、分解字符串，识别出个个单词（基本字、标识符、算符、界符、常数)。&#10;&#10;**所做转换**：源程序字符串-&amp;gt;单词符号&#10;&#10;**依据**：构词规则 **理论基础**：自动机理论&#10;&#10;**示例**&#10;&#10;![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20220228204008952.png)">
    </outline>
    <outline text="3、语法分析" _note="**任务**：在词法分析基础上，将单词符号串转化为语法单位(&#10;语法范畴)(短语、子句、句子、程序段、程序)，并确定整个输入串是否构成语法上正确的程序&#10;&#10;**所做转换**：单词符号-&amp;gt;语法单位（语法范畴）&#10;&#10;**依据**：语法规则 **理论基础**：上下文无关文法&#10;&#10;**举例**&#10;&#10;![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20220228204334848.png)">
    </outline>
    <outline text="4、中间代码生成" _note="**任务**：对语法分析所识别出的各类语法范畴，分析其含义，并进行初步翻译(产生中间代码)  &#10;程序段、程序)，并确定整个输入串是否构成语法上正确的程序&#10;&#10;**所做转换**：语法范畴-&amp;gt;中间代码&#10;&#10;&gt; 不是所有的语法范畴都对应中间代码&#10;&#10;**依据**：语义规则 **理论基础**：属性文法">
    </outline>
    <outline text="5、代码优化" _note="**任务**：对于代码(主要是中间代码)进行加工变换，以期能够产生更为高效(省时间和空间)的目标代码。&#10;&#10;**所做转换**：中间代码-&amp;gt;中间代码（优化后）&#10;&#10;**依据**：程序等价变换规则 **理论基础**：数据流方程&#10;&#10;例如可将乘法优化为加法">
    </outline>
    <outline text="6、目标代码生成" _note="**任务**：将中间代码（通常是优化后的）变换成特定机器上的低级语言代码&#10;&#10;**目标代码形式**：绝对指令、可重定位指令、汇编指令&#10;&#10;**所做转换**：中间代码-&amp;gt;目标代码&#10;&#10;**依据**：硬件体系结构、指令系统">
    </outline>
  </outline>
  <outline text="三、编译程序的结构" _note="体系结构包括了结构，其中还有行为、交互关系等动态信息，结构是静止的。&#10;&#10;如果把词法分析、语法分析、语义分析均组织成单独一遍这种编译程序设计思想使用的是哪种软件体系结构风格？  &#10;串行化批处理风格">
    <outline text="1、编译程序总框" _note="">
    </outline>
    <outline text="2、表格与表格管理" _note="编译各阶段均需要维持表格并进行表格管理&#10;&#10;建表的技术支持是**数据结构**&#10;&#10;表格的分类、结构、处理方法决定于语言和机器还有优化措施&#10;&#10;涉及的表格有：符号名表、常数表、标号表、入口名表、过程引用表等">
    </outline>
    <outline text="3、出错处理" _note="一个好的编译程序应该：最大限度发现错误、准确指出错误的性质和发生地点、将错误的影响限制在尽可能小的范围内&#10;&#10;若能自动校正错误则更好，但是代价很高&#10;&#10;源程序中的错误&#10;&#10;&gt; 语法错误：不符合语法（词法）规则的错误，如单词拼写错误、括号不匹配&#10;&gt;&#10;&gt; 语义错误：不符合语义规则的错误：说明错误等">
    </outline>
    <outline text="4、遍" _note="**遍**是对**源程序或源程序的中间结果**从头到尾扫描一次，并作有关的加工处理，生成新的中间结果或目标程序。&#10;&#10;&gt; 第一遍的输入是源程序，最后一遍的输出是目标程序&#10;&#10;![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20220121103051121.png)">
    </outline>
    <outline text="5、编译前端和后端" _note="**编译前端**主要由与源语言有关但与目标机无关的那些部分组成。&#10;&#10;**编译后端**包括编译程序中与目标机有关的那些部分。">
    </outline>
  </outline>
  <outline text="四、编译程序生成">
    <outline text="1、编译程序的构造工具" _note="以往编译程序的构造大多采用机器语言或汇编语言。现在编译程序的构造越来越多采用高级语言。  &#10;有时为了充分发挥效率或满足不同需求，仍然采用机器语言或汇编语言构造编译程序（或其核心部分">
    </outline>
    <outline text="2、T型图" _note="![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20220228205142358.png)">
    </outline>
    <outline text="3、用高级语言L1构造编译程序" _note="已经有用A机器代码实现的高级语言**L1的编译程序**&#10;&#10;可用高级语言L1编写另一个高级语言L2的编译程序&#10;&#10;将写好语言L2的编译程序用L1的编译程序编译后就可得到用A机器代码实现的&#10;**L2编译程序**&#10;&#10;![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20220228205448837.png)&#10;&#10;&gt; 端口相邻之间要匹配&#10;&gt;&#10;&gt; 挨在一起说明是输入输出关系">
    </outline>
    <outline text="4、编译程序的移值" _note="采用一种所谓的“移植”方法,我们可以利用A机器上已有的高级语言L编写一个能够在B机器上运行的高级语言L的编译程序。做法是,先用&#10;L语言编写出在 A 机器上运行的产生 B 机器代码的 L&#10;编译程序源程序,然后把该源程序经过 A 机器上的 L 编译程序编译后得到能在 A&#10;机器上运行的产生 B&#10;机器代码的编译程序,用这个编译程序再一次编译上述编译程序源程序就得到了能在&#10;B 机器上运行的产生 B 机器代码的编译程序。用 T形图表示为图所示。&#10;&#10;![](https://note-image-1307786938.cos.ap-beijing.myqcloud.com/typora/qshell/image-20220228212007437.png)">
    </outline>
    <outline text="5、自编译方式" _note="先对语言的核心部分构造一个小小的编译程序（可用低级语言实现）再以它为工具材造能编译更多语言成分的较大编译程序。如此不断扩展，最后形成整个编译程序。">
    </outline>
    <outline text="6、构造工具" _note="自动产生扫描器：LEX、FLEX（词法生成器）&#10;&#10;自动产生语法分析器 YACC 、BISON">
    </outline>
    <outline text="7、学习要点" _note="要在某一台机器上为某种语言构造一个编译程序,必须掌握下述三方面的内容：  &#10;1️⃣&#10;**源语言**，对被编译的源语言（如FORTRAN、Pascal或C)，要深刻理解其结构（语法）和含义(语义);  &#10;2️⃣&#10;**目标语言**,假定目标语言是机器语言,那么,就必须搞清楚硬件的系统结构和操作系统的功能；  &#10;3️⃣&#10;**编译方法**,把一种语言程序翻译为另一种语言程序方法很多,但必须准确地掌握">
    </outline>
  </outline>
  <outline text="参考资料" _note="1、西安交通大学软件工程专业编译原理 吴晓军 2022春&#10;&#10;2、【编译原理】编译原理简单介绍&#10;&lt;https://blog.csdn.net/cflys/article/details/71274116&gt;&#10;&#10;3、 陈火旺，刘春林，谭庆平，赵克佳，刘越. 程序设计语言编译原理（第3版）.&#10;北京：国防工业出版社，2010/20132017">
  </outline>
</outline>
  </body>
</opml>
